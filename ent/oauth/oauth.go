// Code generated by entc, DO NOT EDIT.

package oauth

import (
	"time"
)

const (
	// Label holds the string label denoting the oauth type in the database.
	Label = "oauth"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldExpiredAt holds the string denoting the expired_at field in the database.
	FieldExpiredAt = "expired_at"
	// FieldMainToken holds the string denoting the main_token field in the database.
	FieldMainToken = "main_token"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeService holds the string denoting the service edge name in mutations.
	EdgeService = "service"

	// Table holds the table name of the oauth in the database.
	Table = "oauths"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "oauths"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_oauths"
	// ServiceTable is the table the holds the service relation/edge.
	ServiceTable = "oauths"
	// ServiceInverseTable is the table name for the Service entity.
	// It exists in this package in order to avoid circular dependency with the "service" package.
	ServiceInverseTable = "services"
	// ServiceColumn is the table column denoting the service relation/edge.
	ServiceColumn = "oauth_service"
)

// Columns holds all SQL columns for oauth fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldExpiredAt,
	FieldMainToken,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Oauth type.
var ForeignKeys = []string{
	"oauth_service",
	"user_oauths",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// MainTokenValidator is a validator for the "main_token" field. It is called by the builders before save.
	MainTokenValidator func(string) error
)
